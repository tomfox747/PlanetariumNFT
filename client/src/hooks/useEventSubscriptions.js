import { useMoralisSubscription } from 'react-moralis'
import { toast } from 'react-toastify'; 

const useEventSubscriptions = (account) => {

    //Mint events
    useMoralisSubscription("MintedNFTmilkyway", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTmessier", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTandromeda", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTbetelguese", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTarcturus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTformalhaut", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTearth", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTmars", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTsaturn", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTthemoon", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTtitan", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTphobos", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTorion", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTcapricornus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTscorpius", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFToumuamua", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFThalleyscomet", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})
    useMoralisSubscription("MintedNFTholmberg", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully minted", {type:'success'})})

    //purchase events
    useMoralisSubscription("purchasedMilkyway", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedMessier", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedAndromeda", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedArcturus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedFormalhaut", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedBetelguese", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedEarth", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedMars", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedSaturn", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedTheMoon", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedTitan", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedPhobos", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedOrion", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedCapricornus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedScorpius", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedOumuamua", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedHalleysComet", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})
    useMoralisSubscription("purchasedHolmberg", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was successfully purchased", {type:'success'})})

    //list events
    useMoralisSubscription("listedMilkyway", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedMessier", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedAndromeda", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedArcturus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedFormalhaut", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedBetelguese", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedEarth", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedMars", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedSaturn", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedTheMoon", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedTitan", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedPhobos", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedOrion", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedCapricornus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedScorpius", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedOumuamua", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedHalleysComet", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})
    useMoralisSubscription("listedHolmberg", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully listed", {type:'success'})})

    //delist events
    useMoralisSubscription("delistedMilkyway", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedMessier", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedAndromeda", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedArcturus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedFormalhaut", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedBetelguese", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedEarth", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedMars", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedSaturn", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedTheMoon", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedTitan", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedPhobos", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedOrion", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedCapricornus", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedScorpius", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedOumuamua", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedHalleysComet", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})
    useMoralisSubscription("delistedHolmberg", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT was succesfully delisted", {type:'success'})})

    //update price events
    useMoralisSubscription("updatedMilkywayPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedMessierPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedAndromedaPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedArcturusPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedFormalhautPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedBetelgeusePrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedEarthPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedMarsPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedSaturnPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedTheMoonPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedTitanPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedPhobosPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedOrionPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedCapricornusPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedScorpiusPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedOumuamuaPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedHalleysCometPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
    useMoralisSubscription("updatedHolmbergPrice", q => q.equalTo("sender", account), [], {onCreate: () => toast("Your NFT price was succesfully updated", {type:'success'})})
}

export default useEventSubscriptions